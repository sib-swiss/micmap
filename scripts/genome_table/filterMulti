#!/usr/bin/perl
#
# ------------------------------------------------------------------------------------------------------------------------
#
#                                * micmap *
#      Mapping of short reads in fastq format onto a reference
#
#
#  Copyright (C) SIB  - Swiss Institute of Bioinformatics,  2015-2019 Nicolas Guex, Thierry Schuepbach and Christian Iseli
#  Copyright (C) UNIL - University of Lausanne, Switzerland      2019 Nicolas Guex and Christian Iseli
#
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
#
#      Code:       Nicolas Guex, Thierry Schuepbach and Christian Iseli
#      Contacts:   Nicolas.Guex@unil.ch and Christian.Iseli@unil.ch
#      Repository: https://github.com/sib-swiss/micmap
#
# ------------------------------------------------------------------------------------------------------------------------
#
use strict;
use warnings;
my $cur;
my $Ctag;
my $Cac;
my $Cpos;
my $cnt;
while ( <> ) {
  my @F = split /\t/;
  my ($ac,$pos) = $F[2] =~ /^([^\[]+)\[(\d+)\./;
  die "Can't grok $F[2]" unless defined $ac;
  if (not defined($cur) or $Ctag ne $F[0]) {
    if (defined $cur) {
      $cur =~ s/\s+$//s;
      print $cur, "\t", $cnt, "\n";
    }
    $cur = $_;
    $Ctag = $F[0];
    $Cac = $ac;
    $Cpos = $pos;
    $cnt = 0;
  }
  if ($ac lt $Cac) {
    $cur = $_;
    $Cac = $ac;
    $Cpos = $pos;
  } elsif ($ac eq $Cac and $pos < $Cpos) {
    $cur = $_;
    $Cpos = $pos;
  }
  $cnt += 1;
}
if (defined $cur) {
  $cur =~ s/\s+$//s;
  print $cur, "\t", $cnt, "\n";
}
exit 0;
__END__
AAAAAAAAAAAAAAAAAAAA	AAAAAAAAAAAAAAAAAAAA	NC_000001.11[77175..77194]	+
AAAAAAAAAAAAAAAAAAAA	AAAAAAAAAAAAAAAAAAAA	NC_000001.11[77176..77195]	+
AAAAAAAAAAAAAAAAAAAA	AAAAAAAAAAAAAAAAAAAA	NC_000001.11[82134..82153]	+
AAAAAAAAAAAAAAAAAAAA	AAAAAAAAAAAAAAAAAAAA	NC_000001.11[82135..82154]	+
AAAAAAAAAAAAAAAAAAAA	AAAAAAAAAAAAAAAAAAAA	NC_000001.11[164674..164693]	+
